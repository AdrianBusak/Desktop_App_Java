/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hr.algebra;

import hr.algebra.dal.BookRepository;
import hr.algebra.dal.DataRepository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.User;
import hr.algebra.view.DragAndDrop;
import hr.algebra.view.EditAuthor;
import hr.algebra.view.EditBooksPanel;
import hr.algebra.view.EditPublisher;
import hr.algebra.view.UploadBooksPanel;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author AdrianBusak
 */
public class BookManager extends javax.swing.JFrame {

    private static final String UPLOAD_BOOKS = "Upload books";
    private static final String EDIT_BOOKS = "Edit books";
    private static final String EDIT_AUTHORS = "Edit authors";
    private static final String EDIT_PUBLISHERS = "Edit publishers";
    private static final String DRAG_AND_DROP = "Drag and drop";
    private User user;
    private DataRepository repository;

    /**
     * Creates new form BookManager
     */
    public BookManager() {
        initComponents();
        configurePanels();
    }

    public BookManager(User user) {
        this.user = user;
        initComponents();
        configurePanels();
        initRepository();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpContent = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        mExit = new javax.swing.JMenu();
        miExit = new javax.swing.JMenu();
        mClearDatabase = new javax.swing.JMenu();
        miClearData = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mExit.setText("Exit");
        mExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mExitActionPerformed(evt);
            }
        });

        miExit.setText("Exit");
        miExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miExitMouseClicked(evt);
            }
        });
        mExit.add(miExit);

        jMenuBar1.add(mExit);

        mClearDatabase.setText("Clear database");

        miClearData.setText("Clear");
        miClearData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miClearDataMouseClicked(evt);
            }
        });
        miClearData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miClearDataActionPerformed(evt);
            }
        });
        mClearDatabase.add(miClearData);

        jMenuBar1.add(mClearDatabase);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tpContent, javax.swing.GroupLayout.PREFERRED_SIZE, 1222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tpContent, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mExitActionPerformed
    }//GEN-LAST:event_mExitActionPerformed

    private void miExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miExitMouseClicked
        System.exit(0);
    }//GEN-LAST:event_miExitMouseClicked

    private void miClearDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miClearDataActionPerformed
        try {
            repository.clearAllData();
        } catch (Exception ex) {
            Logger.getLogger(BookManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_miClearDataActionPerformed

    private void miClearDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miClearDataMouseClicked
        try {
            repository.clearAllData();
        } catch (Exception ex) {
            Logger.getLogger(BookManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(0);
    }//GEN-LAST:event_miClearDataMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookManager().setVisible(true);
            }
        });
    }

    private void configurePanels() {
        if (user.getRole().equals("admin")) {
            tpContent.add(UPLOAD_BOOKS, new UploadBooksPanel());
            tpContent.add(EDIT_BOOKS, new EditBooksPanel());
            tpContent.add(EDIT_AUTHORS, new EditAuthor());
            tpContent.add(EDIT_PUBLISHERS, new EditPublisher());
            tpContent.add(DRAG_AND_DROP, new DragAndDrop(user));
        } else if (user.getRole().equals("user")) {
            tpContent.add(EDIT_BOOKS, new EditBooksPanel());
            tpContent.add(DRAG_AND_DROP, new DragAndDrop(user));
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu mClearDatabase;
    private javax.swing.JMenu mExit;
    private javax.swing.JMenuItem miClearData;
    private javax.swing.JMenu miExit;
    private javax.swing.JTabbedPane tpContent;
    // End of variables declaration//GEN-END:variables

    private void initRepository() {
        repository = RepositoryFactory.getRepository(DataRepository.class);
    }
}
